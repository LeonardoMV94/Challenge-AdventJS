/**
 * El Grinch est√° abriendo las cartas que iban a Santa Claus y las est√° dejando hechas un l√≠o. üò±

    Las cartas son una cadena de texto que incluyen regalos y par√©ntesis ().

    Para saber si una carta es v√°lida ‚úÖ, debes comprobar que los par√©ntesis cierran correctamente y que, adem√°s, no vayan vac√≠os.

    ¬°Pero ojo! Porque el Grinch ha dejado llaves { y corchetes [ dentro de los par√©ntesis que hacen que no sean v√°lidas. Por suerte s√≥lo los ha dejado en medio de los par√©ntesis...

    Ejemplos:

    "bici coche (bal√≥n) bici coche peluche" // -> ‚úÖ
    "(mu√±eca) consola bici" // ‚úÖ

    "bici coche (bal√≥n bici coche" // -> ‚ùå
    "peluche (bici [coche) bici coche bal√≥n" // -> ‚ùå
    "(peluche {) bici" // -> ‚ùå
    "() bici" // ‚ùå
        
    Crea una funci√≥n que pas√°ndole el texto de la carta, devuelva true si es v√°lida y false si no lo es. ¬°Y acaba con la travesura del Grinch!
 */

function isValid(letter) {
// ¬°No dejes que el Grinch gane!
    const init = letter.indexOf('(')
    const fin = letter.indexOf(')')
    if(init === -1 || fin === -1) return false

    const word = letter.slice(init, fin+2)
    console.log(word)

    if(word.includes('{') || word.includes('}') || word.includes('[') || word.includes(']')) return false
    console.log(word)
    
    const intoParentesis = word.substring(word.indexOf('(') +1, word.indexOf(')'))
    if(intoParentesis == '' || intoParentesis.includes('(') || intoParentesis.includes(')')) return false
    console.log(intoParentesis)

    return true
}

console.log(isValid("bici coche (bal√≥n) bici coche peluche")) // true
console.log(isValid("(mu√±eca) consola bici")) // true

console.log(isValid("peluche (bici [coche) bici coche bal√≥n" )) // false
console.log(isValid("(peluche {) bici" )) // false
console.log(isValid("bici coche (bal√≥n bici coche" )) // false
console.log(isValid("() bici" )) // false
console.log(isValid("(()) bici" )) // false
console.log(isValid("({}) bici" )) // false
console.log(isValid("(a() bici (a)" )) // false